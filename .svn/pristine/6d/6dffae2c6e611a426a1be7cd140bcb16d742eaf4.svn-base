<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Home extends CI_Controller {

    public function __construct() {
        parent::__construct();
        $this->load->model('Productfun');
        
        $this->config->load('google');
        require 'C:/xampp/htdocs/backup_atgo/application/third_party/src/Google_Client.php';
        require 'C:/xampp/htdocs/backup_atgo/application/third_party/src/contrib/Google_Oauth2Service.php';
        $cache_path = $this->config->item('cache_path');
        $GLOBALS['apiConfig']['ioFileCache_directory'] = ($cache_path == '') ? APPPATH .'cache/' : $cache_path;
        $this->client = new Google_Client();
        $this->client->setApplicationName($this->config->item('application_name', 'google'));
        $this->client->setClientId($this->config->item('client_id', 'google'));
        $this->client->setClientSecret($this->config->item('client_secret', 'google'));
        $this->client->setRedirectUri($this->config->item('redirect_uri', 'google'));
        $this->client->setDeveloperKey($this->config->item('api_key', 'google'));
        $this->oauth2 = new Google_Oauth2Service($this->client);
        // Your own constructor code
    }

    public function index() {
        $data1=$this->client->getAccessToken();
        
        $post=array();
        $this->load->library('facebook');
        $user = $this->facebook->getUser();
        if ($user) {
            try {
                $post['user_profile'] = $this->facebook->api('/me');
            } catch (FacebookApiException $e) {
                $user = null;
            }
        }else {
            $this->facebook->destroySession();
        }
        if ($user) { 
            
            
            echo "ere FB login";die;

            $post['logout_url'] = site_url('welcome/logout'); // Logs off application
           
        } else { 
            $post['login_url'] = $this->facebook->getLoginUrl(array(
                'redirect_uri' => site_url(''), 
                'scope' => array("email") // permissions here
            ));
        }
        
        $this->load->view('common/header');
        $data = $this->Productfun->Show_all_products();
        $this->load->helper('share');
        $post['logged_in'] = 1;

        if (!isset($this->session->userdata['User'])) {
            $post['logged_in'] = 0;
        }
        $post['auth'] = $this->client->createAuthUrl();
        foreach ($data as $result) {
            $post['posts'][] = array(
                'post_id' => $result['post_id'],
                'customer_id' => $result['customer_id'],
                'fname' => $result['fname'],
                'lname' => $result['lname'],
                'category_id' => $result['category_id'],
                'title' => $result['title'],
                'description' => $result['description'],
                'hyperlink' => $result['hyperlink'],
                'status' => $result['title'],
                'like_counter' => $result['like_counter'],
                'share_counter' => $result['like_counter'],
                'created_on' => $result['created_on'],
                'modified_on' => $result['modified_on'],
                'is_deleted' => $result['is_deleted'],
                'image' => $this->Productfun->Show_all_images($result['post_id'])
            );
        }

        $this->load->view('home/home', $post);
        $this->load->view('common/footer');
    }
    public function googleLoginSubmit ()
    {
        $this->input->get('code');
        $this->client->authenticate();
        $data1=$this->client->getAccessToken();
        $data[] = $this->oauth2->userinfo->get();
        $post['logged_in'] = 1;
        // echo "<pre>"; print_r($data);die;
        $c_session['User'] = array(
                'c_id' => $data[0]['id'],
                'c_name' => $data[0]['given_name'] ,
                'c_email' => $data[0]['email'],
                'c_logged_in' => TRUE
            );

        $this->session->set_userdata($c_session);
        //echo "<pre>"; print_r($data);
        redirect('home','refresh');
        //$this->load->view('google', $data);
    }

    public function details($id = '') {

        $data = $this->Productfun->Product_details($id);

        $this->load->helper('share');
        $this->load->view('common/header');
        $post = array();
        foreach ($data as $result) {
            $post['posts'][] = array(
                'post_id' => $result['post_id'],
                'category_id' => $result['category_id'],
                'title' => $result['title'],
                'description' => $result['description'],
                'hyperlink' => $result['hyperlink'],
                'status' => $result['title'],
                'like_counter' => $result['like_counter'],
                'share_counter' => $result['like_counter'],
                'created_on' => $result['created_on'],
                'modified_on' => $result['modified_on'],
                'is_deleted' => $result['is_deleted'],
                'image' => $this->Productfun->showGalleryimages($result['post_id'])
            );
        }
        $this->load->view('home/details', $post);
        $this->load->view('common/footer');
    }

    public function Categories() {
        if ($this->session->userdata('c_logged_in')) {
            
        } else {
            redirect('home', 'refresh');
        }
        $this->load->model('customerfun');

        $data['no_msg'] = '';

        if ($_SERVER['REQUEST_METHOD'] == 'POST') {
            $post_categories = $_POST['gender'];
            $categories = '';
            for ($i = 0; $i < count($post_categories); $i++) {
                if ($i == 0) {
                    $categories.=$post_categories[$i];
                } else {
                    $categories.=',' . $post_categories[$i];
                }
            }
            $user_data = $this->session->all_userdata();

            // echo $user_data['c_id']; 
            //  echo $user_data['c_name']; 
            // echo $user_data['c_email']; 
            //  echo $user_data['c_logged_in']; 
            // echo 'hello how are you............'; 
            $ins_customer = $this->customerfun->update_customer($user_data['c_id'], $categories);
            $data['no_msg'] = 'Category has been updated successfully..';
        }
        $this->load->view('categories', $data);
    }

    public function check_count() {
        $get_liked = '';
        $data = $this->input->post();
        $get_liked = $this->Productfun->insert_liked($data);
        if ($get_liked) {
            echo get_liked;
        } else {
            echo '0';
        }
    }

    public function check_tellme_count() {
        $get_liked = '';
        $post_id = $_POST['post_id'];
        $get_liked = $this->Productfun->insert_tellme($post_id);
        if ($get_liked) {
            echo get_liked;
        } else {
            echo '';
        }
    }

    function browseCategory() {
        $data['categories'] = $this->Productfun->GetCategory();
        $d['browse'] = '1';
//        echo '<pre/>';
//        print_r($data);
        $this->load->view('common/header', $d);
        $this->load->view('home/browse_category', $data);
        $this->load->view('common/footer');
    }

    function viewCategory($id = '') {

        $this->load->library('facebook');
         
        $data = $this->Productfun->showPostByCatId($id);
        $this->load->helper('share');
        $this->load->view('common/header');
        $post = array();
        
        $post['login_url'] = $this->facebook->getLoginUrl(array(
                'redirect_uri' => site_url(''), 
                'scope' => array("email") // permissions here
            ));
         
        if (!isset($this->session->userdata['User'])) {
            $post['logged_in'] = 0;
        }
        else {
            $post['logged_in'] = 1;
        }
        
        foreach ($data as $result) {
            $post['posts'][] = array(
                'post_id' => $result['post_id'],
                'customer_id' => $result['customer_id'],
                'category_id' => $result['category_id'],
                'title' => $result['title'],
                'description' => $result['description'],
                'hyperlink' => $result['hyperlink'],
                'status' => $result['title'],
                'like_counter' => $result['like_counter'],
                'share_counter' => $result['like_counter'],
                'created_on' => $result['created_on'],
                'modified_on' => $result['modified_on'],
                'is_deleted' => $result['is_deleted'],
                'image' => $this->Productfun->Show_all_images($result['post_id'])
            );
        }
        $post['category'] = $this->Productfun->getCatDetailCatId($id);
        //print_r($post);die;
        $this->load->view('home/home', $post);
        $this->load->view('common/footer');
    }

    function check_gallery_count() {
        $get_liked = '';
        $data = $this->input->post();
        $get_liked = $this->Productfun->insertGalleryliked($data);
        if ($get_liked) {
            echo get_liked;
        } else {
            echo '0';
        }
    }

    function search() {
        $data = $this->input->post();
        $data = $this->Productfun->searchPost($data);
        $this->load->helper('share');

        $this->load->view('common/header');
        $post = array();
        
        $this->load->library('facebook');

        $post['login_url'] = $this->facebook->getLoginUrl(array(
               'redirect_uri' => site_url(''), 
               'scope' => array("email") // permissions here
           ));
         
        foreach ($data as $result) {
            $post['posts'][] = array(
                'post_id' => $result['post_id'],
                'customer_id' => $result['customer_id'],
                'category_id' => $result['category_id'],
                'title' => $result['title'],
                'description' => $result['description'],
                'hyperlink' => $result['hyperlink'],
                'status' => $result['title'],
                'like_counter' => $result['like_counter'],
                'share_counter' => $result['like_counter'],
                'created_on' => $result['created_on'],
                'modified_on' => $result['modified_on'],
                'is_deleted' => $result['is_deleted'],
                'image' => $this->Productfun->Show_all_images($result['post_id'])
            );
        }

        $this->load->view('home/home', $post);
        $this->load->view('common/footer');
    }

}
